# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: 京豆昨日收益

on:
  workflow_dispatch:
  schedule:
    - cron: '45 23 * * *'
  watch:
    types: [started]
  repository_dispatch:
    types: jd_bean_change

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: npm install
        run: |
          npm install
      - name: '运行 【京豆昨日收益】'
        run: |
          node ./Task/onlyOneExecute.js
        env:
          # JD通用配置
          JD_COOKIE: ${{ github.event.client_payload.JD_COOKIE || secrets.JD_COOKIE }} # 京东cookie,多个账号的cookie使用&隔开或者换行。具体获取参考https://github.com/lxk0301/jd_scripts/wiki/GetCookies
          JD_DEBUG: ${{ github.event.client_payload.JD_DEBUG || secrets.JD_DEBUG }} # 运行脚本时，是否显示log,默认显示。改成false表示不显示，注重隐私的人可以在设置secret -> Name:JD_DEBUG,Value:false
          JD_USER_AGENT: ${{ github.event.client_payload.JD_USER_AGENT || secrets.JD_USER_AGENT}} # 若不了解则不填
          # 推送配置
          PUSH_KEY: ${{ github.event.client_payload.PUSH_KEY || secrets.PUSH_KEY }} # 微信推送 http://sc.ftqq.com/3.version
          BARK_PUSH: ${{ github.event.client_payload.BARK_PUSH || secrets.BARK_PUSH }} # BARK推送
          BARK_SOUND: ${{ github.event.client_payload.BARK_SOUND || secrets.BARK_SOUND }} # bark推送声音设置，例如choo,具体值请在bark-推送铃声-查看所有铃声
          TG_BOT_TOKEN: ${{ github.event.client_payload.TG_BOT_TOKEN || secrets.TG_BOT_TOKEN }} # tg推送,填写自己申请@BotFather的Token,如10xxx4:AAFcqxxxxgER5uw
          TG_USER_ID: ${{ github.event.client_payload.TG_USER_ID || secrets.TG_USER_ID }} # tg推送,填写@getuseridbot中获取到的纯数字ID
          TG_PROXY_HOST: ${{ github.event.client_payload.TG_USER_ID || secrets.TG_USER_ID }} # Telegram 代理的IP,例子：http代理 http://127.0.0.1:1080 则填写 127.0.0.1
          TG_PROXY_PORT: ${{ github.event.client_payload.TG_PROXY_PORT || secrets.TG_PROXY_PORT }} # Telegram 代理的Port,例子：http代理 http://127.0.0.1:1080 则填写 1080
          DD_BOT_TOKEN: ${{ github.event.client_payload.DD_BOT_TOKEN || secrets.DD_BOT_TOKEN }} # 钉钉推送官方文档 ,只需https://oapi.dingtalk.com/robot/send?access_token=XXX 等于符号后面的XXX， 注：如果钉钉推送只填写DD_BOT_TOKEN，那么安全设置需勾选自定义关键词，内容输入输入账号即可，其他安全设置不要勾选
          DD_BOT_SECRET: ${{ github.event.client_payload.DD_BOT_SECRET || secrets.DD_BOT_SECRET }} # 密钥，机器人安全设置页面，加签一栏下面显示的SEC开头的字符串 , 注:填写了DD_BOT_TOKEN和DD_BOT_SECRET，钉钉机器人安全设置只需勾选加签即可，其他选项不要勾选
          IGOT_PUSH_KEY: ${{ github.event.client_payload.IGOT_PUSH_KEY || secrets.IGOT_PUSH_KEY }} # iGot聚合推送，支持多方式推送，确保消息可达. 参考 https://wahao.github.io/Bark-MP-helper
          # 同步地址
          SYNCURL: https://github.com/Xinx1201/action/raw/master/Task/jd_bean_change.js
